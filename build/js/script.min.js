document.getElementById("animation")&&lottie.loadAnimation({container:document.getElementById("animation"),renderer:"svg",loop:!0,autoplay:!0,path:"data.json"}),function(){var e="https://split.daichicloud.ru/brands/all",t="GET",s=200,n=300,o=function(e,t){var o=new XMLHttpRequest;return o.timeout=1e4,o.responseType="json",o.addEventListener("load",(function(){!function(e){return e.status<s||e.status>n}(o)?e(o.response):t("Данные не загрузились. Причина: "+o.status+" "+o.statusText)})),o.addEventListener("error",(function(){t("Произошла ошибка соединения")})),o.addEventListener("timeout",(function(){t("Запрос не успел выполниться за "+o.timeout+"мс")})),o},i=function(e){e.remove()},c=function(e){var t=document.createElement("div");t.style="z-index: 100; margin: 0 auto; text-align: center; background-color: red;",t.style.position="absolute",t.style.left=0,t.style.right=0,t.style.fontSize="30px",t.textContent=e,document.body.insertAdjacentElement("afterbegin",t),window.setTimeout(i,2e3,t)};window.backend={load:function(s,n){var i=o(s,n||c);i.open(t,e),i.send()}}}(),jQuery,function(e){console.log(document.location.search);let t="",s="";const n=document.querySelector(".model-choice__brand-list"),o=document.querySelector(".model-choice__brand-choice"),i=document.querySelector(".model-choice__series-list"),c=document.querySelector(".model-choice__series-choice"),a=document.querySelector(".model-choice__select-brand"),d=document.querySelector(".model-choice__select-series");if(!n)return;let l=-1,r=-1;document.querySelector(".model-choice__series-wrapper"),document.querySelector("#series").content.querySelector(".model-choice__series-select");const m=document.querySelector(".model-choice__link"),u=()=>{if(!n.classList.contains("show"))return n.classList.add("show"),void o.classList.add("opened");n.classList.contains("show")&&(n.classList.remove("show"),o.classList.remove("opened"))},h=()=>{if(!i.classList.contains("show"))return i.classList.add("show"),void c.classList.add("opened");i.classList.contains("show")&&(i.classList.remove("show"),c.classList.remove("opened"))},L=e=>{let t=e.target;t.classList.contains("model-choice__brand-choice")||t.classList.contains("model-choice__brand-item")||t.classList.contains("model-choice__brand-list")||!n.classList.contains("show")||(n.classList.remove("show"),o.classList.remove("opened")),t.classList.contains("model-choice__series-choice")||t.classList.contains("model-choice__series-item")||t.classList.contains("model-choice__series-list")||!i.classList.contains("show")||(i.classList.remove("show"),c.classList.remove("opened"))};e.load(e=>{let p=document.createDocumentFragment(),v=0;e.forEach(e=>{let t=document.createElement("li");t.textContent=e.title,t.classList.add("model-choice__brand-item"),t.setAttribute("data-id",v),v++,p.appendChild(t)}),n.appendChild(p);let _=document.createDocumentFragment();e.forEach(e=>{let t=document.createElement("option");t.textContent=e.title,t.classList.add("model-choice__brand-option"),t.setAttribute("data-id",v),_.appendChild(t)}),a.appendChild(_);o.addEventListener("click",u),c.addEventListener("click",h),n.addEventListener("click",t=>{let a=t.target,d=+a.getAttribute("data-id");if(a.classList.contains("model-choice__brand-item")&&(l===d&&(n.classList.remove("show"),o.classList.remove("opened")),l!==d)){i.innerHTML="",c.textContent="Выбрать из списка",c.classList.remove("selected");let t=document.createDocumentFragment(),d=+a.getAttribute("data-id");e[d].series.forEach(e=>{let s=document.createElement("li");s.textContent=e.title,s.classList.add("model-choice__series-item"),t.appendChild(s)}),i.appendChild(t),l=d,o.textContent=a.textContent,s=a.textContent,o.classList.contains("selected")||o.classList.add("selected"),c.hasAttribute("disabled")&&c.removeAttribute("disabled"),n.classList.remove("show"),o.classList.remove("opened"),m.classList.add("disabled"),m.removeAttribute("href")}}),i.addEventListener("click",e=>{let n=e.target;n.classList.contains("model-choice__series-item")&&(c.textContent=n.textContent,c.classList.contains("selected")||c.classList.add("selected"),i.classList.remove("show"),c.classList.remove("opened"),m.classList.remove("disabled"),t=n.textContent,m.setAttribute("href","installation.html?&"+s+"&"+t))}),a.addEventListener("change",t=>{r=t.target.selectedIndex-1,d.innerHTML="",c.textContent="Выбрать из списка",c.classList.remove("selected");let n=document.createElement("option");n.textContent="",n.setAttribute("disabled",""),n.setAttribute("selected",""),n.style.display="none",d.appendChild(n);let i=document.createDocumentFragment();d.hasAttribute("disabled")&&d.removeAttribute("disabled"),e[r].series.forEach(e=>{let t=document.createElement("option");t.textContent=e.title,t.classList.add("model-choice__series-option"),i.appendChild(t)}),d.appendChild(i),o.textContent=t.target.value,s=t.target.value,o.classList.contains("selected")||o.classList.add("selected"),m.classList.add("disabled"),m.removeAttribute("href")}),d.addEventListener("change",e=>{c.textContent=e.target.value,c.classList.contains("selected")||c.classList.add("selected"),m.classList.remove("disabled"),t=e.target.value,m.setAttribute("href","installation.html?&"+s+"&"+t)}),document.addEventListener("mousedown",L)})}(window.backend);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
