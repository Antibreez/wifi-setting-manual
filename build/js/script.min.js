document.getElementById("animation")&&lottie.loadAnimation({container:document.getElementById("animation"),renderer:"svg",loop:!0,autoplay:!0,path:"data.json"}),function(){var e="https://split.daichicloud.ru/brands/all",t="GET",s=200,n=300,i=function(e,t){var i=new XMLHttpRequest;return i.timeout=1e4,i.responseType="json",i.addEventListener("load",(function(){!function(e){return e.status<s||e.status>n}(i)?e(i.response):t("Данные не загрузились. Причина: "+i.status+" "+i.statusText)})),i.addEventListener("error",(function(){t("Произошла ошибка соединения")})),i.addEventListener("timeout",(function(){t("Запрос не успел выполниться за "+i.timeout+"мс")})),i},o=function(e){e.remove()},c=function(e){var t=document.createElement("div");t.style="z-index: 100; margin: 0 auto; text-align: center; background-color: red;",t.style.position="absolute",t.style.left=0,t.style.right=0,t.style.fontSize="30px",t.textContent=e,document.body.insertAdjacentElement("afterbegin",t),window.setTimeout(o,2e3,t)};window.backend={load:function(s,n){var o=i(s,n||c);o.open(t,e),o.send()}}}(),jQuery,function(e,t){let s="",n="";const i=document.querySelector(".model-choice__brand-list"),o=document.querySelector(".model-choice__brand-choice"),c=document.querySelector(".model-choice__series-list"),a=document.querySelector(".model-choice__series-choice"),d=document.querySelector(".model-choice__select-brand"),l=document.querySelector(".model-choice__select-series");if(!i)return;let r=-1,m=-1;document.querySelector(".model-choice__series-wrapper"),document.querySelector("#series").content.querySelector(".model-choice__series-select");const u=document.querySelector(".model-choice__link"),p=e=>{let s="";return t.forEach(t=>{""===s&&-1!==e.toLowerCase().indexOf(t)&&(s=t)}),""===s?"":s+".html"},h=()=>{if(!i.classList.contains("show"))return i.classList.add("show"),void o.classList.add("opened");i.classList.contains("show")&&(i.classList.remove("show"),o.classList.remove("opened"))},_=()=>{if(!c.classList.contains("show"))return c.classList.add("show"),void a.classList.add("opened");c.classList.contains("show")&&(c.classList.remove("show"),a.classList.remove("opened"))},L=e=>{let t=e.target;t.classList.contains("model-choice__brand-choice")||t.classList.contains("model-choice__brand-item")||t.classList.contains("model-choice__brand-list")||!i.classList.contains("show")||(i.classList.remove("show"),o.classList.remove("opened")),t.classList.contains("model-choice__series-choice")||t.classList.contains("model-choice__series-item")||t.classList.contains("model-choice__series-list")||!c.classList.contains("show")||(c.classList.remove("show"),a.classList.remove("opened"))};e.load(e=>{let t=document.createDocumentFragment(),v=0;e.forEach(e=>{let s=document.createElement("li");s.textContent=e.title,s.classList.add("model-choice__brand-item"),s.setAttribute("data-id",v),v++,t.appendChild(s)}),i.appendChild(t);let b=document.createDocumentFragment();e.forEach(e=>{let t=document.createElement("option");t.textContent=e.title,t.classList.add("model-choice__brand-option"),t.setAttribute("data-id",v),b.appendChild(t)}),d.appendChild(b);o.addEventListener("click",h),a.addEventListener("click",_),i.addEventListener("click",t=>{let s=t.target,d=+s.getAttribute("data-id");if(s.classList.contains("model-choice__brand-item")&&(r===d&&(i.classList.remove("show"),o.classList.remove("opened")),r!==d)){c.innerHTML="",a.textContent="Выбрать из списка",a.classList.remove("selected");let t=document.createDocumentFragment(),d=+s.getAttribute("data-id");e[d].series.forEach(e=>{let s=document.createElement("li");s.textContent=e.title,s.classList.add("model-choice__series-item"),t.appendChild(s)}),c.appendChild(t),r=d,o.textContent=s.textContent,n=s.textContent,o.classList.contains("selected")||o.classList.add("selected"),a.hasAttribute("disabled")&&a.removeAttribute("disabled"),i.classList.remove("show"),o.classList.remove("opened"),u.classList.add("disabled"),u.removeAttribute("href")}}),c.addEventListener("click",e=>{let t=e.target;t.classList.contains("model-choice__series-item")&&(a.textContent=t.textContent,a.classList.contains("selected")||a.classList.add("selected"),c.classList.remove("show"),a.classList.remove("opened"),u.classList.remove("disabled"),s=t.textContent,u.setAttribute("href",p(s)))}),d.addEventListener("change",t=>{m=t.target.selectedIndex-1,l.innerHTML="",a.textContent="Выбрать из списка",a.classList.remove("selected");let s=document.createElement("option");s.textContent="",s.setAttribute("disabled",""),s.setAttribute("selected",""),s.style.display="none",l.appendChild(s);let i=document.createDocumentFragment();l.hasAttribute("disabled")&&l.removeAttribute("disabled"),e[m].series.forEach(e=>{let t=document.createElement("option");t.textContent=e.title,t.classList.add("model-choice__series-option"),i.appendChild(t)}),l.appendChild(i),o.textContent=t.target.value,n=t.target.value,o.classList.contains("selected")||o.classList.add("selected"),u.classList.add("disabled"),u.removeAttribute("href")}),l.addEventListener("change",e=>{a.textContent=e.target.value,a.classList.contains("selected")||a.classList.add("selected"),u.classList.remove("disabled"),s=e.target.value,u.setAttribute("href",p(s))}),u.addEventListener("click",e=>{e.preventDefault();let t=e.target.getAttribute("href");""!==t?document.location.href=t:alert("Инструкция по установке Wi-Fi контроллера для данной серии кондиционера в скором времени появится.")}),document.addEventListener("mousedown",L)})}(window.backend,window.PAGES),function(){const e=document.querySelector(".equipment__wrapper"),t=document.querySelector(".equipment__container");if(!e)return;(()=>{let s=document.createDocumentFragment(),n=e.cloneNode(!0);n.className="equipment__slide-wrapper",n.classList.add("swiper-wrapper");let i=document.createElement("div");i.classList.add("equipment__pagination"),i.classList.add("swiper-pagination"),s.appendChild(n),s.appendChild(i),t.appendChild(s),t.querySelectorAll(".equipment__item").forEach(e=>{e.classList.add("swiper-slide")}),new Swiper(".equipment__container",{pagination:{el:".equipment__pagination",type:"bullets"},loop:!0})})()}(),function(){const e=document.querySelector(".process__wrapper"),t=document.querySelector(".process__container");if(!e)return;(()=>{let s=document.createDocumentFragment(),n=e.cloneNode(!0);n.className="process__slide-wrapper",n.classList.add("swiper-wrapper");let i=document.createElement("div");i.classList.add("process__pagination"),i.classList.add("swiper-pagination");let o=document.createElement("div");o.className="process__number",o.textContent=1,s.appendChild(n),s.appendChild(i),s.appendChild(o),t.appendChild(s),t.querySelectorAll(".process__item").forEach(e=>{e.classList.add("swiper-slide")});(e=>{const s=t.querySelector(".process__number");e.on("slideChange",()=>{console.log(e.realIndex),s.textContent=e.realIndex+1})})(new Swiper(".process__container",{pagination:{el:".process__pagination",type:"bullets"},loop:!0}))})()}();
//# sourceMappingURL=data:application/json;charset=utf8;base64,
